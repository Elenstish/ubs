var map,infoWindow,markersData=[{lat:47.785054,lng:35.212481,name:"УютБудСервис",address:"г. Запорожье, ул. Паромонова, 4"}];function initMap(){var o={center:new google.maps.LatLng(47.785054,35.212481),zoom:16};map=new google.maps.Map(document.getElementById("map"),o),infoWindow=new google.maps.InfoWindow,google.maps.event.addListener(map,"click",function(){infoWindow.close()});new google.maps.LatLngBounds;for(var e=0;e<markersData.length;e++){addMarker(new google.maps.LatLng(markersData[e].lat,markersData[e].lng),markersData[e].name,markersData[e].address)}}function addMarker(o,e,a){var n=new google.maps.Marker({position:o,map:map,title:e,icon:{url:"img/pointer.png",scaledSize:new google.maps.Size(54,60)}});google.maps.event.addListener(n,"click",function(){var o='<div class="infowindow"><h3>'+e+"</h3><p>"+a+"</p></div>";infoWindow.setContent(o),infoWindow.open(map,n)})}if($(document).ready(function(){$('a[href^="#"]').bind("click.smoothscroll",function(o){o.preventDefault();var e=this.hash,a=$(e);$("html, body").stop().animate({scrollTop:a.offset().top},900,"swing",function(){window.location.hash=e})}),$(".responsive").slick({infinite:!0,slidesToShow:4,slidesToScroll:1,arrows:!0,dots:!1,autoplay:!0,autoplaySpeed:2e3,responsive:[{breakpoint:1240,settings:{slidesToShow:3,slidesToScroll:1,centerMode:!1,initialSlide:0}},{breakpoint:769,settings:{slidesToShow:2,slidesToScroll:1,centerMode:!1,initialSlide:0}},{breakpoint:576,settings:{slidesToShow:1,slidesToScroll:1,centerMode:!1,initialSlide:0}}]}),$(window).scroll(function(){0<$(this).scrollTop()?$("#_toTop").fadeIn():$("#_toTop").fadeOut()}),$("#_toTop").click(function(){return $("body,html").animate({scrollTop:0},900),!1}),$(window).scroll(function(){50<$(window).scrollTop()?$(".js-callback").removeClass(".callback_none").addClass("callback"):$(".js-callback").removeClass("callback").addClass("callback_none")});var e=function(){var a=$(window).scrollTop()+$(window).height(),o=$(".animatable");0==o.size()&&$(window).off("scroll",e),o.each(function(o){var e=$(this);e.offset().top+e.height()-20<a&&e.removeClass("animatable").addClass("animated")})};$(window).on("scroll",e),$(window).trigger("scroll")}),window.innerWidth<800){var body=document.getElementByTagName("body")[0];body.className="mobile"}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
