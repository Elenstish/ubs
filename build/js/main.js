var map,infoWindow,markersData=[{lat:47.785054,lng:35.212481,name:"УютБудСервис",address:"г. Запорожье, ул. Паромонова, 4"}];function initMap(){var o={center:new google.maps.LatLng(47.785054,35.212481),zoom:16};map=new google.maps.Map(document.getElementById("map"),o),infoWindow=new google.maps.InfoWindow,google.maps.event.addListener(map,"click",function(){infoWindow.close()});new google.maps.LatLngBounds;for(var a=0;a<markersData.length;a++){addMarker(new google.maps.LatLng(markersData[a].lat,markersData[a].lng),markersData[a].name,markersData[a].address)}}function addMarker(o,a,e){var n=new google.maps.Marker({position:o,map:map,title:a,icon:{url:"img/pointer.png",scaledSize:new google.maps.Size(54,60)}});google.maps.event.addListener(n,"click",function(){var o='<div class="infowindow"><h3>'+a+"</h3><p>"+e+"</p></div>";infoWindow.setContent(o),infoWindow.open(map,n)})}$(document).ready(function(){$('a[href^="#"]').bind("click.smoothscroll",function(o){o.preventDefault();var a=this.hash,e=$(a);$("html, body").stop().animate({scrollTop:e.offset().top},900,"swing",function(){window.location.hash=a})}),$(".responsive").slick({infinite:!0,slidesToShow:4,slidesToScroll:1,arrows:!0,dots:!1,autoplay:!0,autoplaySpeed:2e3,responsive:[{breakpoint:1240,settings:{slidesToShow:3,slidesToScroll:1,centerMode:!1,initialSlide:0}},{breakpoint:769,settings:{slidesToShow:2,slidesToScroll:1,centerMode:!1,initialSlide:0}},{breakpoint:576,settings:{slidesToShow:1,slidesToScroll:1,centerMode:!1,initialSlide:0}}]}),$(window).scroll(function(){0<$(this).scrollTop()?$("#_toTop").fadeIn():$("#_toTop").fadeOut()}),$("#_toTop").click(function(){return $("body,html").animate({scrollTop:0},900),!1}),$(window).scroll(function(){50<$(window).scrollTop()?$(".js-callback").removeClass(".callback_none").addClass("callback"):$(".js-callback").removeClass("callback").addClass("callback_none")});var a=function(){var e=$(window).scrollTop()+$(window).height(),o=$(".animatable");0==o.size()&&$(window).off("scroll",a),o.each(function(o){var a=$(this);a.offset().top+a.height()-20<e&&a.removeClass("animatable").addClass("animated")})};$(window).on("scroll",a),$(window).trigger("scroll")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
