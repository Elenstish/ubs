var map,infoWindow,markersData=[{lat:47.785054,lng:35.212481,name:"УютБудСервис"}];function initMap(){var e={center:new google.maps.LatLng(47.785054,35.212481),zoom:16,styles:[{elementType:"geometry",stylers:[{color:"#f5f5f5"}]},{elementType:"labels.icon",stylers:[{visibility:"off"}]},{elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{elementType:"labels.text.stroke",stylers:[{color:"#f5f5f5"}]},{featureType:"administrative.land_parcel",elementType:"labels.text.fill",stylers:[{color:"#bdbdbd"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"poi.park",elementType:"geometry.fill",stylers:[{color:"#deb33e"}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#ffffff"}]},{featureType:"road.arterial",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#dadada"}]},{featureType:"road.highway",elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{featureType:"road.local",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"transit.line",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"transit.station",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#c9c9c9"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]}]};map=new google.maps.Map(document.getElementById("google-map"),e),infoWindow=new google.maps.InfoWindow,google.maps.event.addListener(map,"click",function(){infoWindow.close()});new google.maps.LatLngBounds;for(var t=0;t<markersData.length;t++){addMarker(new google.maps.LatLng(markersData[t].lat,markersData[t].lng),markersData[t].name,markersData[t].address)}}function addMarker(e,t,o){var l=new google.maps.Marker({position:e,map:map,title:t,icon:{url:"img/pointer.png"}});google.maps.event.addListener(l,"click",function(){var e='<div class="infowindow"><h3>'+t+"</h3><p>"+o+"</p></div>";infoWindow.setContent(e),infoWindow.open(map,l)})}$(document).ready(function(){$('a[href^="#"]').bind("click.smoothscroll",function(e){e.preventDefault();var t=this.hash,o=$(t);$("html, body").stop().animate({scrollTop:o.offset().top},900,"swing",function(){window.location.hash=t})}),$(".responsive").slick({infinite:!0,slidesToShow:3,slidesToScroll:1,arrows:!0,dots:!1,autoplay:!0,autoplaySpeed:2e3,responsive:[{breakpoint:992,settings:{slidesToShow:2,slidesToScroll:1,centerMode:!1,initialSlide:0}},{breakpoint:768,settings:{slidesToShow:1,slidesToScroll:1,centerMode:!1,initialSlide:0}}]}),$(window).scroll(function(){0<$(this).scrollTop()?$("#_toTop").fadeIn():$("#_toTop").fadeOut()}),$("#_toTop").click(function(){return $("body,html").animate({scrollTop:0},900),!1})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
